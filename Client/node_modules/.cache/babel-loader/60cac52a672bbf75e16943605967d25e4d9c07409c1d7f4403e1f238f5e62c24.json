{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\New folder\\\\HackGt11Project\\\\VisualEase\\\\chapter-visualizer-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './Pages/navbar';\nimport TermDef from './Pages/termDef';\nimport ScrTextChunker from \"./Pages/ScrTextChunker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [textInput, setTextInput] = useState('');\n  const [summaries, setSummaries] = useState([]);\n  const [images, setImages] = useState({});\n  const handleTextSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/summarize', {\n        chapterText: textInput\n      });\n      const parts = response.data; // Assuming response is an array of summarized parts\n      setSummaries(parts);\n\n      // Generate images for each summary\n      parts.forEach(async (part, index) => {\n        const imageResponse = await axios.post('http://localhost:5000/generate-image', {\n          textPart: part\n        });\n        setImages(prevImages => ({\n          ...prevImages,\n          [index]: imageResponse.data.imageUrl\n        }));\n      });\n    } catch (error) {\n      console.error('Error processing text:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chapter Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: textInput,\n      onChange: e => setTextInput(e.target.value),\n      placeholder: \"Enter chapter text here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTextSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: summaries.map((summary, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), images[index] && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[index],\n          alt: `Illustration for ${summary}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 43\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/TermDef\",\n            element: /*#__PURE__*/_jsxDEV(TermDef, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Text Chunker\",\n            element: /*#__PURE__*/_jsxDEV(ScrTextChunker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 58\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"M/ZbCn4MyvzPhBhp2F7BVFd+eBk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","BrowserRouter","Router","Routes","Route","Navbar","TermDef","ScrTextChunker","jsxDEV","_jsxDEV","App","_s","textInput","setTextInput","summaries","setSummaries","images","setImages","handleTextSubmit","response","post","chapterText","parts","data","forEach","part","index","imageResponse","textPart","prevImages","imageUrl","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","map","summary","src","alt","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/New folder/HackGt11Project/VisualEase/chapter-visualizer-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from './Pages/navbar';\r\nimport TermDef from './Pages/termDef';\r\nimport ScrTextChunker from \"./Pages/ScrTextChunker\";\r\n\r\nfunction App() {\r\n    const [textInput, setTextInput] = useState('');\r\n    const [summaries, setSummaries] = useState([]);\r\n    const [images, setImages] = useState({});\r\n\r\n    const handleTextSubmit = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/summarize', { chapterText: textInput });\r\n            const parts = response.data; // Assuming response is an array of summarized parts\r\n            setSummaries(parts);\r\n\r\n            // Generate images for each summary\r\n            parts.forEach(async (part, index) => {\r\n                const imageResponse = await axios.post('http://localhost:5000/generate-image', { textPart: part });\r\n                setImages(prevImages => ({ ...prevImages, [index]: imageResponse.data.imageUrl }));\r\n            });\r\n        } catch (error) {\r\n            console.error('Error processing text:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Chapter Visualizer</h1>\r\n            <textarea\r\n                value={textInput}\r\n                onChange={(e) => setTextInput(e.target.value)}\r\n                placeholder=\"Enter chapter text here...\"\r\n            />\r\n            <button onClick={handleTextSubmit}>Submit</button>\r\n\r\n            <div>\r\n                {summaries.map((summary, index) => (\r\n                    <div key={index}>\r\n                        <p>{summary}</p>\r\n                        {images[index] && <img src={images[index]} alt={`Illustration for ${summary}`} />}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <Router>\r\n            <div className=\"App\">\r\n                <Navbar />\r\n                <Routes>\r\n                    <Route path=\"/TermDef\" element={<TermDef />} />\r\n                    <Route path=\"/Text Chunker\" element={<ScrTextChunker />} />\r\n                </Routes>\r\n                    \r\n            </div>\r\n        </Router>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}