{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\New folder\\\\HackGt11Project\\\\VisualEase\\\\chapter-visualizer-frontend\\\\src\\\\Pages\\\\ScrTextChunker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport FlashCards from 'FlashCards'; // Import the FlashcardsScreen component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px 20px;\n  background-color: #f4f4f4;\n  min-height: 100vh;\n  box-sizing: border-box;\n`;\n_c = Container;\nconst ContentWrapper = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  padding: 20px;\n  background-color: #fff;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 8px;\n`;\n_c2 = ContentWrapper;\nconst Section = styled.section`\n  margin-bottom: 40px;\n`;\n_c3 = Section;\nconst SectionTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #333;\n  font-size: 24px;\n`;\n_c4 = SectionTitle;\nconst TextInput = styled.textarea`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  width: 100%;\n  max-width: 100%;\n  min-height: 100px;\n`;\n_c5 = TextInput;\nconst LevelInput = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  width: 100%;\n  max-width: 100%;\n  margin-top: 20px;\n`;\n_c6 = LevelInput;\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 15px 25px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:disabled {\n    background-color: #aaa;\n    cursor: not-allowed;\n  }\n`;\n_c7 = Button;\nconst ScrTextChunker = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [studyLevel, setStudyLevel] = useState('Beginner');\n  const [terms, setTerms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showFlashcards, setShowFlashcards] = useState(false);\n  const handleGenerateTerms = async () => {\n    setLoading(true);\n    console.log(\"Input text:\", text);\n    console.log(\"Study level:\", studyLevel);\n    try {\n      const response = await fetch('http://localhost:5001/extract_terms', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text,\n          level: studyLevel\n        })\n      });\n      console.log(\"Request body:\", {\n        text,\n        level: studyLevel\n      });\n      const data = await response.json();\n      console.log(\"Response data:\", data);\n      const parsedTerms = data.terms_and_definitions.split(/\\n\\d+\\.\\s/).filter(entry => entry.trim() !== '').map(entry => {\n        const match = entry.match(/^\\*\\*(.*?)\\*\\*:\\s(.*)$/);\n        if (match) {\n          return {\n            termName: match[1].trim(),\n            definition: match[2].trim()\n          };\n        } else {\n          return null;\n        }\n      }).filter(item => item !== null);\n      if (parsedTerms.length === 0) {\n        console.warn(\"No terms were parsed.\");\n        alert(\"No terms could be extracted. Please check the input and try again.\");\n      }\n      setTerms(parsedTerms);\n    } catch (error) {\n      console.error(\"Error generating terms:\", error);\n    }\n    setLoading(false);\n  };\n  const handleShowFlashcards = () => {\n    setShowFlashcards(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"showFlashcards ? (\", /*#__PURE__*/_jsxDEV(FlashCards, {\n      terms: terms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), \"  \", \") : (\", /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Input Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter or paste your text here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n          children: \"Study Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LevelInput, {\n          type: \"text\",\n          value: studyLevel,\n          onChange: e => setStudyLevel(e.target.value),\n          placeholder: \"Enter study level (e.g., undergraduate, graduate, expert)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleGenerateTerms,\n          disabled: loading || !text || !studyLevel,\n          children: loading ? \"Generating...\" : \"Generate Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleShowFlashcards,\n          disabled: terms.length === 0,\n          children: \"View Flashcards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrTextChunker, \"JifjnJ5CFIgJ5g+Ep2hhY6bgwXg=\");\n_c8 = ScrTextChunker;\nexport default ScrTextChunker;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ContentWrapper\");\n$RefreshReg$(_c3, \"Section\");\n$RefreshReg$(_c4, \"SectionTitle\");\n$RefreshReg$(_c5, \"TextInput\");\n$RefreshReg$(_c6, \"LevelInput\");\n$RefreshReg$(_c7, \"Button\");\n$RefreshReg$(_c8, \"ScrTextChunker\");","map":{"version":3,"names":["React","useState","styled","FlashCards","jsxDEV","_jsxDEV","Container","div","_c","ContentWrapper","_c2","Section","section","_c3","SectionTitle","h2","_c4","TextInput","textarea","_c5","LevelInput","input","_c6","Button","button","_c7","ScrTextChunker","_s","text","setText","studyLevel","setStudyLevel","terms","setTerms","loading","setLoading","showFlashcards","setShowFlashcards","handleGenerateTerms","console","log","response","fetch","method","headers","body","JSON","stringify","level","data","json","parsedTerms","terms_and_definitions","split","filter","entry","trim","map","match","termName","definition","item","length","warn","alert","error","handleShowFlashcards","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","type","onClick","disabled","_c8","$RefreshReg$"],"sources":["C:/Users/User/Documents/New folder/HackGt11Project/VisualEase/chapter-visualizer-frontend/src/Pages/ScrTextChunker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport FlashCards from 'FlashCards' ;// Import the FlashcardsScreen component\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px 20px;\r\n  background-color: #f4f4f4;\r\n  min-height: 100vh;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst SectionTitle = styled.h2`\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst TextInput = styled.textarea`\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  min-height: 100px;\r\n`;\r\n\r\nconst LevelInput = styled.input`\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-top: 20px;\r\n  padding: 15px 25px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #aaa;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ScrTextChunker = () => {\r\n  const [text, setText] = useState('');\r\n  const [studyLevel, setStudyLevel] = useState('Beginner');\r\n  const [terms, setTerms] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showFlashcards, setShowFlashcards] = useState(false);\r\n\r\n  const handleGenerateTerms = async () => {\r\n    setLoading(true);\r\n\r\n    console.log(\"Input text:\", text);\r\n    console.log(\"Study level:\", studyLevel);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5001/extract_terms', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ text, level: studyLevel })\r\n      });\r\n\r\n      console.log(\"Request body:\", { text, level: studyLevel });\r\n\r\n      const data = await response.json();\r\n\r\n      console.log(\"Response data:\", data);\r\n\r\n      const parsedTerms = data.terms_and_definitions\r\n        .split(/\\n\\d+\\.\\s/)\r\n        .filter(entry => entry.trim() !== '')\r\n        .map(entry => {\r\n          const match = entry.match(/^\\*\\*(.*?)\\*\\*:\\s(.*)$/);\r\n          if (match) {\r\n            return { termName: match[1].trim(), definition: match[2].trim() };\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n        .filter(item => item !== null);\r\n\r\n      if (parsedTerms.length === 0) {\r\n        console.warn(\"No terms were parsed.\");\r\n        alert(\"No terms could be extracted. Please check the input and try again.\");\r\n      }\r\n\r\n      setTerms(parsedTerms);\r\n    } catch (error) {\r\n      console.error(\"Error generating terms:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleShowFlashcards = () => {\r\n    setShowFlashcards(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      showFlashcards ? (\r\n        <FlashCards terms={terms} />  {/* Pass the terms to FlashcardsScreen */}\r\n      ) : (\r\n        <ContentWrapper>\r\n          <Section>\r\n            <SectionTitle>Input Text</SectionTitle>\r\n            <TextInput\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              placeholder=\"Enter or paste your text here...\"\r\n            />\r\n\r\n            <SectionTitle>Study Level</SectionTitle>\r\n            <LevelInput\r\n              type=\"text\"\r\n              value={studyLevel}\r\n              onChange={(e) => setStudyLevel(e.target.value)}\r\n              placeholder=\"Enter study level (e.g., undergraduate, graduate, expert)\"\r\n            />\r\n            \r\n            <Button onClick={handleGenerateTerms} disabled={loading || !text || !studyLevel}>\r\n              {loading ? \"Generating...\" : \"Generate Terms\"}\r\n            </Button>\r\n\r\n            {/* Add button to view flashcards after terms are generated */}\r\n            <Button onClick={handleShowFlashcards} disabled={terms.length === 0}>\r\n              View Flashcards\r\n            </Button>\r\n          </Section>\r\n        </ContentWrapper>\r\n      )\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ScrTextChunker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}